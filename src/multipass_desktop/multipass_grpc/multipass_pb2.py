# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: multipass.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='multipass.proto',
  package='multipass',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x0fmultipass.proto\x12\tmultipass\"\x8c\x01\n\x0bOptInStatus\x12\x34\n\ropt_in_status\x18\x01 \x01(\x0e\x32\x1d.multipass.OptInStatus.Status\"G\n\x06Status\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07PENDING\x10\x01\x12\t\n\x05LATER\x10\x02\x12\x0c\n\x08\x41\x43\x43\x45PTED\x10\x03\x12\n\n\x06\x44\x45NIED\x10\x04\"\xe0\x03\n\rLaunchRequest\x12\x15\n\rinstance_name\x18\x01 \x01(\t\x12\r\n\x05image\x18\x02 \x01(\t\x12\x13\n\x0bkernel_name\x18\x03 \x01(\t\x12\x11\n\tnum_cores\x18\x04 \x01(\x05\x12\x10\n\x08mem_size\x18\x05 \x01(\t\x12\x12\n\ndisk_space\x18\x06 \x01(\t\x12\x11\n\ttime_zone\x18\x07 \x01(\t\x12\x1c\n\x14\x63loud_init_user_data\x18\x08 \x01(\t\x12\x13\n\x0bremote_name\x18\t \x01(\t\x12,\n\x0copt_in_reply\x18\n \x01(\x0b\x32\x16.multipass.OptInStatus\x12\x17\n\x0fverbosity_level\x18\x0b \x01(\x05\x12@\n\x0fnetwork_options\x18\x0c \x03(\x0b\x32\'.multipass.LaunchRequest.NetworkOptions\x1a\x8b\x01\n\x0eNetworkOptions\x12\n\n\x02id\x18\x01 \x01(\t\x12:\n\x04mode\x18\x02 \x01(\x0e\x32,.multipass.LaunchRequest.NetworkOptions.Mode\x12\x13\n\x0bmac_address\x18\x03 \x01(\t\"\x1c\n\x04Mode\x12\x08\n\x04\x41UTO\x10\x00\x12\n\n\x06MANUAL\x10\x01\"\xc9\x01\n\x0bLaunchError\x12\x36\n\x0b\x65rror_codes\x18\x01 \x03(\x0e\x32!.multipass.LaunchError.ErrorCodes\"\x81\x01\n\nErrorCodes\x12\x06\n\x02OK\x10\x00\x12\x13\n\x0fINSTANCE_EXISTS\x10\x01\x12\x14\n\x10INVALID_MEM_SIZE\x10\x02\x12\x15\n\x11INVALID_DISK_SIZE\x10\x03\x12\x14\n\x10INVALID_HOSTNAME\x10\x04\x12\x13\n\x0fINVALID_NETWORK\x10\x05\"\xbb\x01\n\x0eLaunchProgress\x12\x35\n\x04type\x18\x01 \x01(\x0e\x32\'.multipass.LaunchProgress.ProgressTypes\x12\x18\n\x10percent_complete\x18\x02 \x01(\t\"X\n\rProgressTypes\x12\t\n\x05IMAGE\x10\x00\x12\n\n\x06KERNEL\x10\x01\x12\n\n\x06INITRD\x10\x02\x12\x0b\n\x07\x45XTRACT\x10\x03\x12\n\n\x06VERIFY\x10\x04\x12\x0b\n\x07WAITING\x10\x05\"\xc8\x01\n\x0fMetricsShowInfo\x12\x36\n\thost_info\x18\x01 \x01(\x0b\x32#.multipass.MetricsShowInfo.HostInfo\x12?\n\x0einstances_info\x18\x02 \x03(\x0b\x32\'.multipass.MetricsShowInfo.InstanceInfo\x1a\x1b\n\x08HostInfo\x12\x0f\n\x07release\x18\x01 \x01(\t\x1a\x1f\n\x0cInstanceInfo\x12\x0f\n\x07release\x18\x01 \x01(\t\"N\n\nUpdateInfo\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x0b\n\x03url\x18\x02 \x01(\t\x12\r\n\x05title\x18\x03 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x04 \x01(\t\"\xae\x02\n\x0bLaunchReply\x12\x1a\n\x10vm_instance_name\x18\x01 \x01(\tH\x00\x12\x34\n\x0flaunch_progress\x18\x02 \x01(\x0b\x32\x19.multipass.LaunchProgressH\x00\x12\x18\n\x0e\x63reate_message\x18\x03 \x01(\tH\x00\x12\x17\n\x0fmetrics_pending\x18\x04 \x01(\x08\x12\x35\n\x11metrics_show_info\x18\x05 \x01(\x0b\x32\x1a.multipass.MetricsShowInfo\x12\x10\n\x08log_line\x18\x06 \x01(\t\x12*\n\x0bupdate_info\x18\x07 \x01(\x0b\x32\x15.multipass.UpdateInfo\x12\x15\n\rreply_message\x18\x08 \x01(\tB\x0e\n\x0c\x63reate_oneof\"\'\n\x0cPurgeRequest\x12\x17\n\x0fverbosity_level\x18\x01 \x01(\x05\"\x1e\n\nPurgeReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\"m\n\x0b\x46indRequest\x12\x15\n\rsearch_string\x18\x01 \x01(\t\x12\x13\n\x0bremote_name\x18\x02 \x01(\t\x12\x17\n\x0fverbosity_level\x18\x03 \x01(\x05\x12\x19\n\x11\x61llow_unsupported\x18\x04 \x01(\x08\"\xf4\x01\n\tFindReply\x12\x33\n\x0bimages_info\x18\x01 \x03(\x0b\x32\x1e.multipass.FindReply.ImageInfo\x12\x10\n\x08log_line\x18\x02 \x01(\t\x1a/\n\tAliasInfo\x12\x13\n\x0bremote_name\x18\x01 \x01(\t\x12\r\n\x05\x61lias\x18\x02 \x01(\t\x1ao\n\tImageInfo\x12\n\n\x02os\x18\x01 \x01(\t\x12\x0f\n\x07release\x18\x02 \x01(\t\x12\x0f\n\x07version\x18\x03 \x01(\t\x12\x34\n\x0c\x61liases_info\x18\x04 \x03(\x0b\x32\x1e.multipass.FindReply.AliasInfo\"&\n\rInstanceNames\x12\x15\n\rinstance_name\x18\x01 \x03(\t\"X\n\x0bInfoRequest\x12\x30\n\x0einstance_names\x18\x01 \x01(\x0b\x32\x18.multipass.InstanceNames\x12\x17\n\x0fverbosity_level\x18\x02 \x01(\x05\"\xcf\x01\n\tMountMaps\x12\x31\n\x07uid_map\x18\x01 \x03(\x0b\x32 .multipass.MountMaps.UidMapEntry\x12\x31\n\x07gid_map\x18\x02 \x03(\x0b\x32 .multipass.MountMaps.GidMapEntry\x1a-\n\x0bUidMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\x1a-\n\x0bGidMapEntry\x12\x0b\n\x03key\x18\x01 \x01(\x05\x12\r\n\x05value\x18\x02 \x01(\x05:\x02\x38\x01\"\xbd\x01\n\tMountInfo\x12\x18\n\x10longest_path_len\x18\x01 \x01(\r\x12\x34\n\x0bmount_paths\x18\x02 \x03(\x0b\x32\x1f.multipass.MountInfo.MountPaths\x1a`\n\nMountPaths\x12\x13\n\x0bsource_path\x18\x01 \x01(\t\x12\x13\n\x0btarget_path\x18\x02 \x01(\t\x12(\n\nmount_maps\x18\x03 \x01(\x0b\x32\x14.multipass.MountMaps\"\xd4\x01\n\x0eInstanceStatus\x12\x30\n\x06status\x18\x01 \x01(\x0e\x32 .multipass.InstanceStatus.Status\"\x8f\x01\n\x06Status\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07RUNNING\x10\x01\x12\x0c\n\x08STARTING\x10\x02\x12\x0e\n\nRESTARTING\x10\x03\x12\x0b\n\x07STOPPED\x10\x04\x12\x0b\n\x07\x44\x45LETED\x10\x05\x12\x14\n\x10\x44\x45LAYED_SHUTDOWN\x10\x06\x12\x0e\n\nSUSPENDING\x10\x07\x12\r\n\tSUSPENDED\x10\x08\"\xf5\x02\n\tInfoReply\x12\'\n\x04info\x18\x01 \x03(\x0b\x32\x19.multipass.InfoReply.Info\x12\x10\n\x08log_line\x18\x02 \x01(\t\x1a\xac\x02\n\x04Info\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x32\n\x0finstance_status\x18\x02 \x01(\x0b\x32\x19.multipass.InstanceStatus\x12\x15\n\rimage_release\x18\x03 \x01(\t\x12\x17\n\x0f\x63urrent_release\x18\x04 \x01(\t\x12\n\n\x02id\x18\x05 \x01(\t\x12\x0c\n\x04load\x18\x06 \x01(\t\x12\x14\n\x0cmemory_usage\x18\x07 \x01(\t\x12\x14\n\x0cmemory_total\x18\x08 \x01(\t\x12\x12\n\ndisk_usage\x18\t \x01(\t\x12\x12\n\ndisk_total\x18\n \x01(\t\x12\x0c\n\x04ipv4\x18\x0b \x03(\t\x12\x0c\n\x04ipv6\x18\x0c \x03(\t\x12(\n\nmount_info\x18\r \x01(\x0b\x32\x14.multipass.MountInfo\"<\n\x0bListRequest\x12\x17\n\x0fverbosity_level\x18\x01 \x01(\x05\x12\x14\n\x0crequest_ipv4\x18\x02 \x01(\x08\"\x87\x01\n\x0eListVMInstance\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x32\n\x0finstance_status\x18\x02 \x01(\x0b\x32\x19.multipass.InstanceStatus\x12\x0c\n\x04ipv4\x18\x03 \x03(\t\x12\x0c\n\x04ipv6\x18\x04 \x03(\t\x12\x17\n\x0f\x63urrent_release\x18\x05 \x01(\t\"w\n\tListReply\x12,\n\tinstances\x18\x01 \x03(\x0b\x32\x19.multipass.ListVMInstance\x12\x10\n\x08log_line\x18\x02 \x01(\t\x12*\n\x0bupdate_info\x18\x03 \x01(\x0b\x32\x15.multipass.UpdateInfo\"*\n\x0fNetworksRequest\x12\x17\n\x0fverbosity_level\x18\x01 \x01(\x05\"?\n\x0cNetInterface\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x13\n\x0b\x64\x65scription\x18\x03 \x01(\t\"z\n\rNetworksReply\x12+\n\ninterfaces\x18\x01 \x03(\x0b\x32\x17.multipass.NetInterface\x12\x10\n\x08log_line\x18\x02 \x01(\t\x12*\n\x0bupdate_info\x18\x03 \x01(\x0b\x32\x15.multipass.UpdateInfo\"<\n\x0eTargetPathInfo\x12\x15\n\rinstance_name\x18\x01 \x01(\t\x12\x13\n\x0btarget_path\x18\x02 \x01(\t\"\x97\x01\n\x0cMountRequest\x12\x13\n\x0bsource_path\x18\x01 \x01(\t\x12/\n\x0ctarget_paths\x18\x02 \x03(\x0b\x32\x19.multipass.TargetPathInfo\x12(\n\nmount_maps\x18\x03 \x01(\x0b\x32\x14.multipass.MountMaps\x12\x17\n\x0fverbosity_level\x18\x04 \x01(\x05\"5\n\nMountReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\x12\x15\n\rmount_message\x18\x02 \x01(\t\"\r\n\x0bPingRequest\"\x0b\n\tPingReply\"[\n\x0eRecoverRequest\x12\x30\n\x0einstance_names\x18\x01 \x01(\x0b\x32\x18.multipass.InstanceNames\x12\x17\n\x0fverbosity_level\x18\x02 \x01(\x05\" \n\x0cRecoverReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\"@\n\x0eSSHInfoRequest\x12\x15\n\rinstance_name\x18\x01 \x03(\t\x12\x17\n\x0fverbosity_level\x18\x02 \x01(\x05\"P\n\x07SSHInfo\x12\x0c\n\x04port\x18\x01 \x01(\x05\x12\x17\n\x0fpriv_key_base64\x18\x02 \x01(\t\x12\x0c\n\x04host\x18\x03 \x01(\t\x12\x10\n\x08username\x18\x04 \x01(\t\"\x9c\x01\n\x0cSSHInfoReply\x12\x36\n\x08ssh_info\x18\x01 \x03(\x0b\x32$.multipass.SSHInfoReply.SshInfoEntry\x12\x10\n\x08log_line\x18\x02 \x01(\t\x1a\x42\n\x0cSshInfoEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12!\n\x05value\x18\x02 \x01(\x0b\x32\x12.multipass.SSHInfo:\x02\x38\x01\"\xf2\x01\n\nStartError\x12\x42\n\x0finstance_errors\x18\x01 \x03(\x0b\x32).multipass.StartError.InstanceErrorsEntry\x1aV\n\x13InstanceErrorsEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12.\n\x05value\x18\x02 \x01(\x0e\x32\x1f.multipass.StartError.ErrorCode:\x02\x38\x01\"H\n\tErrorCode\x12\x06\n\x02OK\x10\x00\x12\x12\n\x0e\x44OES_NOT_EXIST\x10\x01\x12\x14\n\x10INSTANCE_DELETED\x10\x02\x12\t\n\x05OTHER\x10\x03\"Y\n\x0cStartRequest\x12\x30\n\x0einstance_names\x18\x01 \x01(\x0b\x32\x18.multipass.InstanceNames\x12\x17\n\x0fverbosity_level\x18\x02 \x01(\x05\"a\n\nStartReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\x12\x15\n\rreply_message\x18\x02 \x01(\t\x12*\n\x0bupdate_info\x18\x03 \x01(\x0b\x32\x15.multipass.UpdateInfo\"\x87\x01\n\x0bStopRequest\x12\x30\n\x0einstance_names\x18\x01 \x01(\x0b\x32\x18.multipass.InstanceNames\x12\x14\n\x0ctime_minutes\x18\x02 \x01(\x05\x12\x17\n\x0f\x63\x61ncel_shutdown\x18\x03 \x01(\x08\x12\x17\n\x0fverbosity_level\x18\x04 \x01(\x05\"\x1d\n\tStopReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\"[\n\x0eSuspendRequest\x12\x30\n\x0einstance_names\x18\x01 \x01(\x0b\x32\x18.multipass.InstanceNames\x12\x17\n\x0fverbosity_level\x18\x02 \x01(\x05\" \n\x0cSuspendReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\"[\n\x0eRestartRequest\x12\x30\n\x0einstance_names\x18\x01 \x01(\x0b\x32\x18.multipass.InstanceNames\x12\x17\n\x0fverbosity_level\x18\x02 \x01(\x05\"c\n\x0cRestartReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\x12\x15\n\rreply_message\x18\x02 \x01(\t\x12*\n\x0bupdate_info\x18\x03 \x01(\x0b\x32\x15.multipass.UpdateInfo\"i\n\rDeleteRequest\x12\x30\n\x0einstance_names\x18\x01 \x01(\x0b\x32\x18.multipass.InstanceNames\x12\r\n\x05purge\x18\x02 \x01(\x08\x12\x17\n\x0fverbosity_level\x18\x03 \x01(\x05\"\x1f\n\x0b\x44\x65leteReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\"Y\n\rUmountRequest\x12/\n\x0ctarget_paths\x18\x01 \x03(\x0b\x32\x19.multipass.TargetPathInfo\x12\x17\n\x0fverbosity_level\x18\x02 \x01(\x05\"\x1f\n\x0bUmountReply\x12\x10\n\x08log_line\x18\x01 \x01(\t\")\n\x0eVersionRequest\x12\x17\n\x0fverbosity_level\x18\x01 \x01(\x05\"]\n\x0cVersionReply\x12\x0f\n\x07version\x18\x01 \x01(\t\x12\x10\n\x08log_line\x18\x02 \x01(\t\x12*\n\x0bupdate_info\x18\x03 \x01(\x0b\x32\x15.multipass.UpdateInfo2\xcd\x08\n\x03Rpc\x12<\n\x06\x63reate\x12\x18.multipass.LaunchRequest\x1a\x16.multipass.LaunchReply0\x01\x12<\n\x06launch\x12\x18.multipass.LaunchRequest\x1a\x16.multipass.LaunchReply0\x01\x12\x39\n\x05purge\x12\x17.multipass.PurgeRequest\x1a\x15.multipass.PurgeReply0\x01\x12\x36\n\x04\x66ind\x12\x16.multipass.FindRequest\x1a\x14.multipass.FindReply0\x01\x12\x36\n\x04info\x12\x16.multipass.InfoRequest\x1a\x14.multipass.InfoReply0\x01\x12\x36\n\x04list\x12\x16.multipass.ListRequest\x1a\x14.multipass.ListReply0\x01\x12\x42\n\x08networks\x12\x1a.multipass.NetworksRequest\x1a\x18.multipass.NetworksReply0\x01\x12\x39\n\x05mount\x12\x17.multipass.MountRequest\x1a\x15.multipass.MountReply0\x01\x12\x34\n\x04ping\x12\x16.multipass.PingRequest\x1a\x14.multipass.PingReply\x12?\n\x07recover\x12\x19.multipass.RecoverRequest\x1a\x17.multipass.RecoverReply0\x01\x12@\n\x08ssh_info\x12\x19.multipass.SSHInfoRequest\x1a\x17.multipass.SSHInfoReply0\x01\x12\x39\n\x05start\x12\x17.multipass.StartRequest\x1a\x15.multipass.StartReply0\x01\x12\x36\n\x04stop\x12\x16.multipass.StopRequest\x1a\x14.multipass.StopReply0\x01\x12?\n\x07suspend\x12\x19.multipass.SuspendRequest\x1a\x17.multipass.SuspendReply0\x01\x12?\n\x07restart\x12\x19.multipass.RestartRequest\x1a\x17.multipass.RestartReply0\x01\x12;\n\x05\x64\x65let\x12\x18.multipass.DeleteRequest\x1a\x16.multipass.DeleteReply0\x01\x12<\n\x06umount\x12\x18.multipass.UmountRequest\x1a\x16.multipass.UmountReply0\x01\x12?\n\x07version\x12\x19.multipass.VersionRequest\x1a\x17.multipass.VersionReply0\x01\x62\x06proto3'
)



_OPTINSTATUS_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='multipass.OptInStatus.Status',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='PENDING', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='LATER', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='ACCEPTED', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DENIED', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=100,
  serialized_end=171,
)
_sym_db.RegisterEnumDescriptor(_OPTINSTATUS_STATUS)

_LAUNCHREQUEST_NETWORKOPTIONS_MODE = _descriptor.EnumDescriptor(
  name='Mode',
  full_name='multipass.LaunchRequest.NetworkOptions.Mode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AUTO', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='MANUAL', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=626,
  serialized_end=654,
)
_sym_db.RegisterEnumDescriptor(_LAUNCHREQUEST_NETWORKOPTIONS_MODE)

_LAUNCHERROR_ERRORCODES = _descriptor.EnumDescriptor(
  name='ErrorCodes',
  full_name='multipass.LaunchError.ErrorCodes',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INSTANCE_EXISTS', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_MEM_SIZE', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_DISK_SIZE', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_HOSTNAME', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INVALID_NETWORK', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=729,
  serialized_end=858,
)
_sym_db.RegisterEnumDescriptor(_LAUNCHERROR_ERRORCODES)

_LAUNCHPROGRESS_PROGRESSTYPES = _descriptor.EnumDescriptor(
  name='ProgressTypes',
  full_name='multipass.LaunchProgress.ProgressTypes',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='IMAGE', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='KERNEL', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INITRD', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='EXTRACT', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='VERIFY', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='WAITING', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=960,
  serialized_end=1048,
)
_sym_db.RegisterEnumDescriptor(_LAUNCHPROGRESS_PROGRESSTYPES)

_INSTANCESTATUS_STATUS = _descriptor.EnumDescriptor(
  name='Status',
  full_name='multipass.InstanceStatus.Status',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RUNNING', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='STARTING', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='RESTARTING', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='STOPPED', index=4, number=4,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DELETED', index=5, number=5,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DELAYED_SHUTDOWN', index=6, number=6,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SUSPENDING', index=7, number=7,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='SUSPENDED', index=8, number=8,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2671,
  serialized_end=2814,
)
_sym_db.RegisterEnumDescriptor(_INSTANCESTATUS_STATUS)

_STARTERROR_ERRORCODE = _descriptor.EnumDescriptor(
  name='ErrorCode',
  full_name='multipass.StartError.ErrorCode',
  filename=None,
  file=DESCRIPTOR,
  create_key=_descriptor._internal_create_key,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='DOES_NOT_EXIST', index=1, number=1,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='INSTANCE_DELETED', index=2, number=2,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
    _descriptor.EnumValueDescriptor(
      name='OTHER', index=3, number=3,
      serialized_options=None,
      type=None,
      create_key=_descriptor._internal_create_key),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4650,
  serialized_end=4722,
)
_sym_db.RegisterEnumDescriptor(_STARTERROR_ERRORCODE)


_OPTINSTATUS = _descriptor.Descriptor(
  name='OptInStatus',
  full_name='multipass.OptInStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='opt_in_status', full_name='multipass.OptInStatus.opt_in_status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _OPTINSTATUS_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=31,
  serialized_end=171,
)


_LAUNCHREQUEST_NETWORKOPTIONS = _descriptor.Descriptor(
  name='NetworkOptions',
  full_name='multipass.LaunchRequest.NetworkOptions',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='multipass.LaunchRequest.NetworkOptions.id', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mode', full_name='multipass.LaunchRequest.NetworkOptions.mode', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mac_address', full_name='multipass.LaunchRequest.NetworkOptions.mac_address', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LAUNCHREQUEST_NETWORKOPTIONS_MODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=515,
  serialized_end=654,
)

_LAUNCHREQUEST = _descriptor.Descriptor(
  name='LaunchRequest',
  full_name='multipass.LaunchRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_name', full_name='multipass.LaunchRequest.instance_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='image', full_name='multipass.LaunchRequest.image', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='kernel_name', full_name='multipass.LaunchRequest.kernel_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='num_cores', full_name='multipass.LaunchRequest.num_cores', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mem_size', full_name='multipass.LaunchRequest.mem_size', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='disk_space', full_name='multipass.LaunchRequest.disk_space', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_zone', full_name='multipass.LaunchRequest.time_zone', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cloud_init_user_data', full_name='multipass.LaunchRequest.cloud_init_user_data', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='remote_name', full_name='multipass.LaunchRequest.remote_name', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='opt_in_reply', full_name='multipass.LaunchRequest.opt_in_reply', index=9,
      number=10, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.LaunchRequest.verbosity_level', index=10,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='network_options', full_name='multipass.LaunchRequest.network_options', index=11,
      number=12, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_LAUNCHREQUEST_NETWORKOPTIONS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=654,
)


_LAUNCHERROR = _descriptor.Descriptor(
  name='LaunchError',
  full_name='multipass.LaunchError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='error_codes', full_name='multipass.LaunchError.error_codes', index=0,
      number=1, type=14, cpp_type=8, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LAUNCHERROR_ERRORCODES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=657,
  serialized_end=858,
)


_LAUNCHPROGRESS = _descriptor.Descriptor(
  name='LaunchProgress',
  full_name='multipass.LaunchProgress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='multipass.LaunchProgress.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='percent_complete', full_name='multipass.LaunchProgress.percent_complete', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _LAUNCHPROGRESS_PROGRESSTYPES,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=861,
  serialized_end=1048,
)


_METRICSSHOWINFO_HOSTINFO = _descriptor.Descriptor(
  name='HostInfo',
  full_name='multipass.MetricsShowInfo.HostInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='multipass.MetricsShowInfo.HostInfo.release', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1191,
  serialized_end=1218,
)

_METRICSSHOWINFO_INSTANCEINFO = _descriptor.Descriptor(
  name='InstanceInfo',
  full_name='multipass.MetricsShowInfo.InstanceInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='release', full_name='multipass.MetricsShowInfo.InstanceInfo.release', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1220,
  serialized_end=1251,
)

_METRICSSHOWINFO = _descriptor.Descriptor(
  name='MetricsShowInfo',
  full_name='multipass.MetricsShowInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='host_info', full_name='multipass.MetricsShowInfo.host_info', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='instances_info', full_name='multipass.MetricsShowInfo.instances_info', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_METRICSSHOWINFO_HOSTINFO, _METRICSSHOWINFO_INSTANCEINFO, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1051,
  serialized_end=1251,
)


_UPDATEINFO = _descriptor.Descriptor(
  name='UpdateInfo',
  full_name='multipass.UpdateInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='multipass.UpdateInfo.version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='url', full_name='multipass.UpdateInfo.url', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='title', full_name='multipass.UpdateInfo.title', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description', full_name='multipass.UpdateInfo.description', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1253,
  serialized_end=1331,
)


_LAUNCHREPLY = _descriptor.Descriptor(
  name='LaunchReply',
  full_name='multipass.LaunchReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='vm_instance_name', full_name='multipass.LaunchReply.vm_instance_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='launch_progress', full_name='multipass.LaunchReply.launch_progress', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='create_message', full_name='multipass.LaunchReply.create_message', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metrics_pending', full_name='multipass.LaunchReply.metrics_pending', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='metrics_show_info', full_name='multipass.LaunchReply.metrics_show_info', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.LaunchReply.log_line', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_info', full_name='multipass.LaunchReply.update_info', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reply_message', full_name='multipass.LaunchReply.reply_message', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='create_oneof', full_name='multipass.LaunchReply.create_oneof',
      index=0, containing_type=None,
      create_key=_descriptor._internal_create_key,
    fields=[]),
  ],
  serialized_start=1334,
  serialized_end=1636,
)


_PURGEREQUEST = _descriptor.Descriptor(
  name='PurgeRequest',
  full_name='multipass.PurgeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.PurgeRequest.verbosity_level', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1638,
  serialized_end=1677,
)


_PURGEREPLY = _descriptor.Descriptor(
  name='PurgeReply',
  full_name='multipass.PurgeReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.PurgeReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1679,
  serialized_end=1709,
)


_FINDREQUEST = _descriptor.Descriptor(
  name='FindRequest',
  full_name='multipass.FindRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='search_string', full_name='multipass.FindRequest.search_string', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='remote_name', full_name='multipass.FindRequest.remote_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.FindRequest.verbosity_level', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='allow_unsupported', full_name='multipass.FindRequest.allow_unsupported', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1711,
  serialized_end=1820,
)


_FINDREPLY_ALIASINFO = _descriptor.Descriptor(
  name='AliasInfo',
  full_name='multipass.FindReply.AliasInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='remote_name', full_name='multipass.FindReply.AliasInfo.remote_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='alias', full_name='multipass.FindReply.AliasInfo.alias', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1907,
  serialized_end=1954,
)

_FINDREPLY_IMAGEINFO = _descriptor.Descriptor(
  name='ImageInfo',
  full_name='multipass.FindReply.ImageInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='os', full_name='multipass.FindReply.ImageInfo.os', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='release', full_name='multipass.FindReply.ImageInfo.release', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='version', full_name='multipass.FindReply.ImageInfo.version', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='aliases_info', full_name='multipass.FindReply.ImageInfo.aliases_info', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1956,
  serialized_end=2067,
)

_FINDREPLY = _descriptor.Descriptor(
  name='FindReply',
  full_name='multipass.FindReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='images_info', full_name='multipass.FindReply.images_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.FindReply.log_line', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_FINDREPLY_ALIASINFO, _FINDREPLY_IMAGEINFO, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1823,
  serialized_end=2067,
)


_INSTANCENAMES = _descriptor.Descriptor(
  name='InstanceNames',
  full_name='multipass.InstanceNames',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_name', full_name='multipass.InstanceNames.instance_name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2069,
  serialized_end=2107,
)


_INFOREQUEST = _descriptor.Descriptor(
  name='InfoRequest',
  full_name='multipass.InfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_names', full_name='multipass.InfoRequest.instance_names', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.InfoRequest.verbosity_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2109,
  serialized_end=2197,
)


_MOUNTMAPS_UIDMAPENTRY = _descriptor.Descriptor(
  name='UidMapEntry',
  full_name='multipass.MountMaps.UidMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='multipass.MountMaps.UidMapEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='multipass.MountMaps.UidMapEntry.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2315,
  serialized_end=2360,
)

_MOUNTMAPS_GIDMAPENTRY = _descriptor.Descriptor(
  name='GidMapEntry',
  full_name='multipass.MountMaps.GidMapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='multipass.MountMaps.GidMapEntry.key', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='multipass.MountMaps.GidMapEntry.value', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2362,
  serialized_end=2407,
)

_MOUNTMAPS = _descriptor.Descriptor(
  name='MountMaps',
  full_name='multipass.MountMaps',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='uid_map', full_name='multipass.MountMaps.uid_map', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='gid_map', full_name='multipass.MountMaps.gid_map', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_MOUNTMAPS_UIDMAPENTRY, _MOUNTMAPS_GIDMAPENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2200,
  serialized_end=2407,
)


_MOUNTINFO_MOUNTPATHS = _descriptor.Descriptor(
  name='MountPaths',
  full_name='multipass.MountInfo.MountPaths',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_path', full_name='multipass.MountInfo.MountPaths.source_path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_path', full_name='multipass.MountInfo.MountPaths.target_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mount_maps', full_name='multipass.MountInfo.MountPaths.mount_maps', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2503,
  serialized_end=2599,
)

_MOUNTINFO = _descriptor.Descriptor(
  name='MountInfo',
  full_name='multipass.MountInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='longest_path_len', full_name='multipass.MountInfo.longest_path_len', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mount_paths', full_name='multipass.MountInfo.mount_paths', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_MOUNTINFO_MOUNTPATHS, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2410,
  serialized_end=2599,
)


_INSTANCESTATUS = _descriptor.Descriptor(
  name='InstanceStatus',
  full_name='multipass.InstanceStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='multipass.InstanceStatus.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _INSTANCESTATUS_STATUS,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2602,
  serialized_end=2814,
)


_INFOREPLY_INFO = _descriptor.Descriptor(
  name='Info',
  full_name='multipass.InfoReply.Info',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='multipass.InfoReply.Info.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='instance_status', full_name='multipass.InfoReply.Info.instance_status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='image_release', full_name='multipass.InfoReply.Info.image_release', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='current_release', full_name='multipass.InfoReply.Info.current_release', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='id', full_name='multipass.InfoReply.Info.id', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='load', full_name='multipass.InfoReply.Info.load', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='memory_usage', full_name='multipass.InfoReply.Info.memory_usage', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='memory_total', full_name='multipass.InfoReply.Info.memory_total', index=7,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='disk_usage', full_name='multipass.InfoReply.Info.disk_usage', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='disk_total', full_name='multipass.InfoReply.Info.disk_total', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ipv4', full_name='multipass.InfoReply.Info.ipv4', index=10,
      number=11, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ipv6', full_name='multipass.InfoReply.Info.ipv6', index=11,
      number=12, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mount_info', full_name='multipass.InfoReply.Info.mount_info', index=12,
      number=13, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2890,
  serialized_end=3190,
)

_INFOREPLY = _descriptor.Descriptor(
  name='InfoReply',
  full_name='multipass.InfoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='info', full_name='multipass.InfoReply.info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.InfoReply.log_line', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_INFOREPLY_INFO, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2817,
  serialized_end=3190,
)


_LISTREQUEST = _descriptor.Descriptor(
  name='ListRequest',
  full_name='multipass.ListRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.ListRequest.verbosity_level', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='request_ipv4', full_name='multipass.ListRequest.request_ipv4', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3192,
  serialized_end=3252,
)


_LISTVMINSTANCE = _descriptor.Descriptor(
  name='ListVMInstance',
  full_name='multipass.ListVMInstance',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='multipass.ListVMInstance.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='instance_status', full_name='multipass.ListVMInstance.instance_status', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ipv4', full_name='multipass.ListVMInstance.ipv4', index=2,
      number=3, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='ipv6', full_name='multipass.ListVMInstance.ipv6', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='current_release', full_name='multipass.ListVMInstance.current_release', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3255,
  serialized_end=3390,
)


_LISTREPLY = _descriptor.Descriptor(
  name='ListReply',
  full_name='multipass.ListReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instances', full_name='multipass.ListReply.instances', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.ListReply.log_line', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_info', full_name='multipass.ListReply.update_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3392,
  serialized_end=3511,
)


_NETWORKSREQUEST = _descriptor.Descriptor(
  name='NetworksRequest',
  full_name='multipass.NetworksRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.NetworksRequest.verbosity_level', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3513,
  serialized_end=3555,
)


_NETINTERFACE = _descriptor.Descriptor(
  name='NetInterface',
  full_name='multipass.NetInterface',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='multipass.NetInterface.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='type', full_name='multipass.NetInterface.type', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='description', full_name='multipass.NetInterface.description', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3557,
  serialized_end=3620,
)


_NETWORKSREPLY = _descriptor.Descriptor(
  name='NetworksReply',
  full_name='multipass.NetworksReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='interfaces', full_name='multipass.NetworksReply.interfaces', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.NetworksReply.log_line', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_info', full_name='multipass.NetworksReply.update_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3622,
  serialized_end=3744,
)


_TARGETPATHINFO = _descriptor.Descriptor(
  name='TargetPathInfo',
  full_name='multipass.TargetPathInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_name', full_name='multipass.TargetPathInfo.instance_name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_path', full_name='multipass.TargetPathInfo.target_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3746,
  serialized_end=3806,
)


_MOUNTREQUEST = _descriptor.Descriptor(
  name='MountRequest',
  full_name='multipass.MountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='source_path', full_name='multipass.MountRequest.source_path', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='target_paths', full_name='multipass.MountRequest.target_paths', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mount_maps', full_name='multipass.MountRequest.mount_maps', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.MountRequest.verbosity_level', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3809,
  serialized_end=3960,
)


_MOUNTREPLY = _descriptor.Descriptor(
  name='MountReply',
  full_name='multipass.MountReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.MountReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='mount_message', full_name='multipass.MountReply.mount_message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3962,
  serialized_end=4015,
)


_PINGREQUEST = _descriptor.Descriptor(
  name='PingRequest',
  full_name='multipass.PingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4017,
  serialized_end=4030,
)


_PINGREPLY = _descriptor.Descriptor(
  name='PingReply',
  full_name='multipass.PingReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4032,
  serialized_end=4043,
)


_RECOVERREQUEST = _descriptor.Descriptor(
  name='RecoverRequest',
  full_name='multipass.RecoverRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_names', full_name='multipass.RecoverRequest.instance_names', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.RecoverRequest.verbosity_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4045,
  serialized_end=4136,
)


_RECOVERREPLY = _descriptor.Descriptor(
  name='RecoverReply',
  full_name='multipass.RecoverReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.RecoverReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4138,
  serialized_end=4170,
)


_SSHINFOREQUEST = _descriptor.Descriptor(
  name='SSHInfoRequest',
  full_name='multipass.SSHInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_name', full_name='multipass.SSHInfoRequest.instance_name', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.SSHInfoRequest.verbosity_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4172,
  serialized_end=4236,
)


_SSHINFO = _descriptor.Descriptor(
  name='SSHInfo',
  full_name='multipass.SSHInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='port', full_name='multipass.SSHInfo.port', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='priv_key_base64', full_name='multipass.SSHInfo.priv_key_base64', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='host', full_name='multipass.SSHInfo.host', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='username', full_name='multipass.SSHInfo.username', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4238,
  serialized_end=4318,
)


_SSHINFOREPLY_SSHINFOENTRY = _descriptor.Descriptor(
  name='SshInfoEntry',
  full_name='multipass.SSHInfoReply.SshInfoEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='multipass.SSHInfoReply.SshInfoEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='multipass.SSHInfoReply.SshInfoEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4411,
  serialized_end=4477,
)

_SSHINFOREPLY = _descriptor.Descriptor(
  name='SSHInfoReply',
  full_name='multipass.SSHInfoReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='ssh_info', full_name='multipass.SSHInfoReply.ssh_info', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.SSHInfoReply.log_line', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_SSHINFOREPLY_SSHINFOENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4321,
  serialized_end=4477,
)


_STARTERROR_INSTANCEERRORSENTRY = _descriptor.Descriptor(
  name='InstanceErrorsEntry',
  full_name='multipass.StartError.InstanceErrorsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='multipass.StartError.InstanceErrorsEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='value', full_name='multipass.StartError.InstanceErrorsEntry.value', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=b'8\001',
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4562,
  serialized_end=4648,
)

_STARTERROR = _descriptor.Descriptor(
  name='StartError',
  full_name='multipass.StartError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_errors', full_name='multipass.StartError.instance_errors', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[_STARTERROR_INSTANCEERRORSENTRY, ],
  enum_types=[
    _STARTERROR_ERRORCODE,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4480,
  serialized_end=4722,
)


_STARTREQUEST = _descriptor.Descriptor(
  name='StartRequest',
  full_name='multipass.StartRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_names', full_name='multipass.StartRequest.instance_names', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.StartRequest.verbosity_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4724,
  serialized_end=4813,
)


_STARTREPLY = _descriptor.Descriptor(
  name='StartReply',
  full_name='multipass.StartReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.StartReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reply_message', full_name='multipass.StartReply.reply_message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_info', full_name='multipass.StartReply.update_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4815,
  serialized_end=4912,
)


_STOPREQUEST = _descriptor.Descriptor(
  name='StopRequest',
  full_name='multipass.StopRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_names', full_name='multipass.StopRequest.instance_names', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='time_minutes', full_name='multipass.StopRequest.time_minutes', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='cancel_shutdown', full_name='multipass.StopRequest.cancel_shutdown', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.StopRequest.verbosity_level', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4915,
  serialized_end=5050,
)


_STOPREPLY = _descriptor.Descriptor(
  name='StopReply',
  full_name='multipass.StopReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.StopReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5052,
  serialized_end=5081,
)


_SUSPENDREQUEST = _descriptor.Descriptor(
  name='SuspendRequest',
  full_name='multipass.SuspendRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_names', full_name='multipass.SuspendRequest.instance_names', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.SuspendRequest.verbosity_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5083,
  serialized_end=5174,
)


_SUSPENDREPLY = _descriptor.Descriptor(
  name='SuspendReply',
  full_name='multipass.SuspendReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.SuspendReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5176,
  serialized_end=5208,
)


_RESTARTREQUEST = _descriptor.Descriptor(
  name='RestartRequest',
  full_name='multipass.RestartRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_names', full_name='multipass.RestartRequest.instance_names', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.RestartRequest.verbosity_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5210,
  serialized_end=5301,
)


_RESTARTREPLY = _descriptor.Descriptor(
  name='RestartReply',
  full_name='multipass.RestartReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.RestartReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='reply_message', full_name='multipass.RestartReply.reply_message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_info', full_name='multipass.RestartReply.update_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5303,
  serialized_end=5402,
)


_DELETEREQUEST = _descriptor.Descriptor(
  name='DeleteRequest',
  full_name='multipass.DeleteRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='instance_names', full_name='multipass.DeleteRequest.instance_names', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='purge', full_name='multipass.DeleteRequest.purge', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.DeleteRequest.verbosity_level', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5404,
  serialized_end=5509,
)


_DELETEREPLY = _descriptor.Descriptor(
  name='DeleteReply',
  full_name='multipass.DeleteReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.DeleteReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5511,
  serialized_end=5542,
)


_UMOUNTREQUEST = _descriptor.Descriptor(
  name='UmountRequest',
  full_name='multipass.UmountRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='target_paths', full_name='multipass.UmountRequest.target_paths', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.UmountRequest.verbosity_level', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5544,
  serialized_end=5633,
)


_UMOUNTREPLY = _descriptor.Descriptor(
  name='UmountReply',
  full_name='multipass.UmountReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.UmountReply.log_line', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5635,
  serialized_end=5666,
)


_VERSIONREQUEST = _descriptor.Descriptor(
  name='VersionRequest',
  full_name='multipass.VersionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='verbosity_level', full_name='multipass.VersionRequest.verbosity_level', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5668,
  serialized_end=5709,
)


_VERSIONREPLY = _descriptor.Descriptor(
  name='VersionReply',
  full_name='multipass.VersionReply',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='version', full_name='multipass.VersionReply.version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='log_line', full_name='multipass.VersionReply.log_line', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
    _descriptor.FieldDescriptor(
      name='update_info', full_name='multipass.VersionReply.update_info', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5711,
  serialized_end=5804,
)

_OPTINSTATUS.fields_by_name['opt_in_status'].enum_type = _OPTINSTATUS_STATUS
_OPTINSTATUS_STATUS.containing_type = _OPTINSTATUS
_LAUNCHREQUEST_NETWORKOPTIONS.fields_by_name['mode'].enum_type = _LAUNCHREQUEST_NETWORKOPTIONS_MODE
_LAUNCHREQUEST_NETWORKOPTIONS.containing_type = _LAUNCHREQUEST
_LAUNCHREQUEST_NETWORKOPTIONS_MODE.containing_type = _LAUNCHREQUEST_NETWORKOPTIONS
_LAUNCHREQUEST.fields_by_name['opt_in_reply'].message_type = _OPTINSTATUS
_LAUNCHREQUEST.fields_by_name['network_options'].message_type = _LAUNCHREQUEST_NETWORKOPTIONS
_LAUNCHERROR.fields_by_name['error_codes'].enum_type = _LAUNCHERROR_ERRORCODES
_LAUNCHERROR_ERRORCODES.containing_type = _LAUNCHERROR
_LAUNCHPROGRESS.fields_by_name['type'].enum_type = _LAUNCHPROGRESS_PROGRESSTYPES
_LAUNCHPROGRESS_PROGRESSTYPES.containing_type = _LAUNCHPROGRESS
_METRICSSHOWINFO_HOSTINFO.containing_type = _METRICSSHOWINFO
_METRICSSHOWINFO_INSTANCEINFO.containing_type = _METRICSSHOWINFO
_METRICSSHOWINFO.fields_by_name['host_info'].message_type = _METRICSSHOWINFO_HOSTINFO
_METRICSSHOWINFO.fields_by_name['instances_info'].message_type = _METRICSSHOWINFO_INSTANCEINFO
_LAUNCHREPLY.fields_by_name['launch_progress'].message_type = _LAUNCHPROGRESS
_LAUNCHREPLY.fields_by_name['metrics_show_info'].message_type = _METRICSSHOWINFO
_LAUNCHREPLY.fields_by_name['update_info'].message_type = _UPDATEINFO
_LAUNCHREPLY.oneofs_by_name['create_oneof'].fields.append(
  _LAUNCHREPLY.fields_by_name['vm_instance_name'])
_LAUNCHREPLY.fields_by_name['vm_instance_name'].containing_oneof = _LAUNCHREPLY.oneofs_by_name['create_oneof']
_LAUNCHREPLY.oneofs_by_name['create_oneof'].fields.append(
  _LAUNCHREPLY.fields_by_name['launch_progress'])
_LAUNCHREPLY.fields_by_name['launch_progress'].containing_oneof = _LAUNCHREPLY.oneofs_by_name['create_oneof']
_LAUNCHREPLY.oneofs_by_name['create_oneof'].fields.append(
  _LAUNCHREPLY.fields_by_name['create_message'])
_LAUNCHREPLY.fields_by_name['create_message'].containing_oneof = _LAUNCHREPLY.oneofs_by_name['create_oneof']
_FINDREPLY_ALIASINFO.containing_type = _FINDREPLY
_FINDREPLY_IMAGEINFO.fields_by_name['aliases_info'].message_type = _FINDREPLY_ALIASINFO
_FINDREPLY_IMAGEINFO.containing_type = _FINDREPLY
_FINDREPLY.fields_by_name['images_info'].message_type = _FINDREPLY_IMAGEINFO
_INFOREQUEST.fields_by_name['instance_names'].message_type = _INSTANCENAMES
_MOUNTMAPS_UIDMAPENTRY.containing_type = _MOUNTMAPS
_MOUNTMAPS_GIDMAPENTRY.containing_type = _MOUNTMAPS
_MOUNTMAPS.fields_by_name['uid_map'].message_type = _MOUNTMAPS_UIDMAPENTRY
_MOUNTMAPS.fields_by_name['gid_map'].message_type = _MOUNTMAPS_GIDMAPENTRY
_MOUNTINFO_MOUNTPATHS.fields_by_name['mount_maps'].message_type = _MOUNTMAPS
_MOUNTINFO_MOUNTPATHS.containing_type = _MOUNTINFO
_MOUNTINFO.fields_by_name['mount_paths'].message_type = _MOUNTINFO_MOUNTPATHS
_INSTANCESTATUS.fields_by_name['status'].enum_type = _INSTANCESTATUS_STATUS
_INSTANCESTATUS_STATUS.containing_type = _INSTANCESTATUS
_INFOREPLY_INFO.fields_by_name['instance_status'].message_type = _INSTANCESTATUS
_INFOREPLY_INFO.fields_by_name['mount_info'].message_type = _MOUNTINFO
_INFOREPLY_INFO.containing_type = _INFOREPLY
_INFOREPLY.fields_by_name['info'].message_type = _INFOREPLY_INFO
_LISTVMINSTANCE.fields_by_name['instance_status'].message_type = _INSTANCESTATUS
_LISTREPLY.fields_by_name['instances'].message_type = _LISTVMINSTANCE
_LISTREPLY.fields_by_name['update_info'].message_type = _UPDATEINFO
_NETWORKSREPLY.fields_by_name['interfaces'].message_type = _NETINTERFACE
_NETWORKSREPLY.fields_by_name['update_info'].message_type = _UPDATEINFO
_MOUNTREQUEST.fields_by_name['target_paths'].message_type = _TARGETPATHINFO
_MOUNTREQUEST.fields_by_name['mount_maps'].message_type = _MOUNTMAPS
_RECOVERREQUEST.fields_by_name['instance_names'].message_type = _INSTANCENAMES
_SSHINFOREPLY_SSHINFOENTRY.fields_by_name['value'].message_type = _SSHINFO
_SSHINFOREPLY_SSHINFOENTRY.containing_type = _SSHINFOREPLY
_SSHINFOREPLY.fields_by_name['ssh_info'].message_type = _SSHINFOREPLY_SSHINFOENTRY
_STARTERROR_INSTANCEERRORSENTRY.fields_by_name['value'].enum_type = _STARTERROR_ERRORCODE
_STARTERROR_INSTANCEERRORSENTRY.containing_type = _STARTERROR
_STARTERROR.fields_by_name['instance_errors'].message_type = _STARTERROR_INSTANCEERRORSENTRY
_STARTERROR_ERRORCODE.containing_type = _STARTERROR
_STARTREQUEST.fields_by_name['instance_names'].message_type = _INSTANCENAMES
_STARTREPLY.fields_by_name['update_info'].message_type = _UPDATEINFO
_STOPREQUEST.fields_by_name['instance_names'].message_type = _INSTANCENAMES
_SUSPENDREQUEST.fields_by_name['instance_names'].message_type = _INSTANCENAMES
_RESTARTREQUEST.fields_by_name['instance_names'].message_type = _INSTANCENAMES
_RESTARTREPLY.fields_by_name['update_info'].message_type = _UPDATEINFO
_DELETEREQUEST.fields_by_name['instance_names'].message_type = _INSTANCENAMES
_UMOUNTREQUEST.fields_by_name['target_paths'].message_type = _TARGETPATHINFO
_VERSIONREPLY.fields_by_name['update_info'].message_type = _UPDATEINFO
DESCRIPTOR.message_types_by_name['OptInStatus'] = _OPTINSTATUS
DESCRIPTOR.message_types_by_name['LaunchRequest'] = _LAUNCHREQUEST
DESCRIPTOR.message_types_by_name['LaunchError'] = _LAUNCHERROR
DESCRIPTOR.message_types_by_name['LaunchProgress'] = _LAUNCHPROGRESS
DESCRIPTOR.message_types_by_name['MetricsShowInfo'] = _METRICSSHOWINFO
DESCRIPTOR.message_types_by_name['UpdateInfo'] = _UPDATEINFO
DESCRIPTOR.message_types_by_name['LaunchReply'] = _LAUNCHREPLY
DESCRIPTOR.message_types_by_name['PurgeRequest'] = _PURGEREQUEST
DESCRIPTOR.message_types_by_name['PurgeReply'] = _PURGEREPLY
DESCRIPTOR.message_types_by_name['FindRequest'] = _FINDREQUEST
DESCRIPTOR.message_types_by_name['FindReply'] = _FINDREPLY
DESCRIPTOR.message_types_by_name['InstanceNames'] = _INSTANCENAMES
DESCRIPTOR.message_types_by_name['InfoRequest'] = _INFOREQUEST
DESCRIPTOR.message_types_by_name['MountMaps'] = _MOUNTMAPS
DESCRIPTOR.message_types_by_name['MountInfo'] = _MOUNTINFO
DESCRIPTOR.message_types_by_name['InstanceStatus'] = _INSTANCESTATUS
DESCRIPTOR.message_types_by_name['InfoReply'] = _INFOREPLY
DESCRIPTOR.message_types_by_name['ListRequest'] = _LISTREQUEST
DESCRIPTOR.message_types_by_name['ListVMInstance'] = _LISTVMINSTANCE
DESCRIPTOR.message_types_by_name['ListReply'] = _LISTREPLY
DESCRIPTOR.message_types_by_name['NetworksRequest'] = _NETWORKSREQUEST
DESCRIPTOR.message_types_by_name['NetInterface'] = _NETINTERFACE
DESCRIPTOR.message_types_by_name['NetworksReply'] = _NETWORKSREPLY
DESCRIPTOR.message_types_by_name['TargetPathInfo'] = _TARGETPATHINFO
DESCRIPTOR.message_types_by_name['MountRequest'] = _MOUNTREQUEST
DESCRIPTOR.message_types_by_name['MountReply'] = _MOUNTREPLY
DESCRIPTOR.message_types_by_name['PingRequest'] = _PINGREQUEST
DESCRIPTOR.message_types_by_name['PingReply'] = _PINGREPLY
DESCRIPTOR.message_types_by_name['RecoverRequest'] = _RECOVERREQUEST
DESCRIPTOR.message_types_by_name['RecoverReply'] = _RECOVERREPLY
DESCRIPTOR.message_types_by_name['SSHInfoRequest'] = _SSHINFOREQUEST
DESCRIPTOR.message_types_by_name['SSHInfo'] = _SSHINFO
DESCRIPTOR.message_types_by_name['SSHInfoReply'] = _SSHINFOREPLY
DESCRIPTOR.message_types_by_name['StartError'] = _STARTERROR
DESCRIPTOR.message_types_by_name['StartRequest'] = _STARTREQUEST
DESCRIPTOR.message_types_by_name['StartReply'] = _STARTREPLY
DESCRIPTOR.message_types_by_name['StopRequest'] = _STOPREQUEST
DESCRIPTOR.message_types_by_name['StopReply'] = _STOPREPLY
DESCRIPTOR.message_types_by_name['SuspendRequest'] = _SUSPENDREQUEST
DESCRIPTOR.message_types_by_name['SuspendReply'] = _SUSPENDREPLY
DESCRIPTOR.message_types_by_name['RestartRequest'] = _RESTARTREQUEST
DESCRIPTOR.message_types_by_name['RestartReply'] = _RESTARTREPLY
DESCRIPTOR.message_types_by_name['DeleteRequest'] = _DELETEREQUEST
DESCRIPTOR.message_types_by_name['DeleteReply'] = _DELETEREPLY
DESCRIPTOR.message_types_by_name['UmountRequest'] = _UMOUNTREQUEST
DESCRIPTOR.message_types_by_name['UmountReply'] = _UMOUNTREPLY
DESCRIPTOR.message_types_by_name['VersionRequest'] = _VERSIONREQUEST
DESCRIPTOR.message_types_by_name['VersionReply'] = _VERSIONREPLY
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

OptInStatus = _reflection.GeneratedProtocolMessageType('OptInStatus', (_message.Message,), {
  'DESCRIPTOR' : _OPTINSTATUS,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.OptInStatus)
  })
_sym_db.RegisterMessage(OptInStatus)

LaunchRequest = _reflection.GeneratedProtocolMessageType('LaunchRequest', (_message.Message,), {

  'NetworkOptions' : _reflection.GeneratedProtocolMessageType('NetworkOptions', (_message.Message,), {
    'DESCRIPTOR' : _LAUNCHREQUEST_NETWORKOPTIONS,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.LaunchRequest.NetworkOptions)
    })
  ,
  'DESCRIPTOR' : _LAUNCHREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.LaunchRequest)
  })
_sym_db.RegisterMessage(LaunchRequest)
_sym_db.RegisterMessage(LaunchRequest.NetworkOptions)

LaunchError = _reflection.GeneratedProtocolMessageType('LaunchError', (_message.Message,), {
  'DESCRIPTOR' : _LAUNCHERROR,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.LaunchError)
  })
_sym_db.RegisterMessage(LaunchError)

LaunchProgress = _reflection.GeneratedProtocolMessageType('LaunchProgress', (_message.Message,), {
  'DESCRIPTOR' : _LAUNCHPROGRESS,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.LaunchProgress)
  })
_sym_db.RegisterMessage(LaunchProgress)

MetricsShowInfo = _reflection.GeneratedProtocolMessageType('MetricsShowInfo', (_message.Message,), {

  'HostInfo' : _reflection.GeneratedProtocolMessageType('HostInfo', (_message.Message,), {
    'DESCRIPTOR' : _METRICSSHOWINFO_HOSTINFO,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.MetricsShowInfo.HostInfo)
    })
  ,

  'InstanceInfo' : _reflection.GeneratedProtocolMessageType('InstanceInfo', (_message.Message,), {
    'DESCRIPTOR' : _METRICSSHOWINFO_INSTANCEINFO,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.MetricsShowInfo.InstanceInfo)
    })
  ,
  'DESCRIPTOR' : _METRICSSHOWINFO,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.MetricsShowInfo)
  })
_sym_db.RegisterMessage(MetricsShowInfo)
_sym_db.RegisterMessage(MetricsShowInfo.HostInfo)
_sym_db.RegisterMessage(MetricsShowInfo.InstanceInfo)

UpdateInfo = _reflection.GeneratedProtocolMessageType('UpdateInfo', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEINFO,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.UpdateInfo)
  })
_sym_db.RegisterMessage(UpdateInfo)

LaunchReply = _reflection.GeneratedProtocolMessageType('LaunchReply', (_message.Message,), {
  'DESCRIPTOR' : _LAUNCHREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.LaunchReply)
  })
_sym_db.RegisterMessage(LaunchReply)

PurgeRequest = _reflection.GeneratedProtocolMessageType('PurgeRequest', (_message.Message,), {
  'DESCRIPTOR' : _PURGEREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.PurgeRequest)
  })
_sym_db.RegisterMessage(PurgeRequest)

PurgeReply = _reflection.GeneratedProtocolMessageType('PurgeReply', (_message.Message,), {
  'DESCRIPTOR' : _PURGEREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.PurgeReply)
  })
_sym_db.RegisterMessage(PurgeReply)

FindRequest = _reflection.GeneratedProtocolMessageType('FindRequest', (_message.Message,), {
  'DESCRIPTOR' : _FINDREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.FindRequest)
  })
_sym_db.RegisterMessage(FindRequest)

FindReply = _reflection.GeneratedProtocolMessageType('FindReply', (_message.Message,), {

  'AliasInfo' : _reflection.GeneratedProtocolMessageType('AliasInfo', (_message.Message,), {
    'DESCRIPTOR' : _FINDREPLY_ALIASINFO,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.FindReply.AliasInfo)
    })
  ,

  'ImageInfo' : _reflection.GeneratedProtocolMessageType('ImageInfo', (_message.Message,), {
    'DESCRIPTOR' : _FINDREPLY_IMAGEINFO,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.FindReply.ImageInfo)
    })
  ,
  'DESCRIPTOR' : _FINDREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.FindReply)
  })
_sym_db.RegisterMessage(FindReply)
_sym_db.RegisterMessage(FindReply.AliasInfo)
_sym_db.RegisterMessage(FindReply.ImageInfo)

InstanceNames = _reflection.GeneratedProtocolMessageType('InstanceNames', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCENAMES,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.InstanceNames)
  })
_sym_db.RegisterMessage(InstanceNames)

InfoRequest = _reflection.GeneratedProtocolMessageType('InfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _INFOREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.InfoRequest)
  })
_sym_db.RegisterMessage(InfoRequest)

MountMaps = _reflection.GeneratedProtocolMessageType('MountMaps', (_message.Message,), {

  'UidMapEntry' : _reflection.GeneratedProtocolMessageType('UidMapEntry', (_message.Message,), {
    'DESCRIPTOR' : _MOUNTMAPS_UIDMAPENTRY,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.MountMaps.UidMapEntry)
    })
  ,

  'GidMapEntry' : _reflection.GeneratedProtocolMessageType('GidMapEntry', (_message.Message,), {
    'DESCRIPTOR' : _MOUNTMAPS_GIDMAPENTRY,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.MountMaps.GidMapEntry)
    })
  ,
  'DESCRIPTOR' : _MOUNTMAPS,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.MountMaps)
  })
_sym_db.RegisterMessage(MountMaps)
_sym_db.RegisterMessage(MountMaps.UidMapEntry)
_sym_db.RegisterMessage(MountMaps.GidMapEntry)

MountInfo = _reflection.GeneratedProtocolMessageType('MountInfo', (_message.Message,), {

  'MountPaths' : _reflection.GeneratedProtocolMessageType('MountPaths', (_message.Message,), {
    'DESCRIPTOR' : _MOUNTINFO_MOUNTPATHS,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.MountInfo.MountPaths)
    })
  ,
  'DESCRIPTOR' : _MOUNTINFO,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.MountInfo)
  })
_sym_db.RegisterMessage(MountInfo)
_sym_db.RegisterMessage(MountInfo.MountPaths)

InstanceStatus = _reflection.GeneratedProtocolMessageType('InstanceStatus', (_message.Message,), {
  'DESCRIPTOR' : _INSTANCESTATUS,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.InstanceStatus)
  })
_sym_db.RegisterMessage(InstanceStatus)

InfoReply = _reflection.GeneratedProtocolMessageType('InfoReply', (_message.Message,), {

  'Info' : _reflection.GeneratedProtocolMessageType('Info', (_message.Message,), {
    'DESCRIPTOR' : _INFOREPLY_INFO,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.InfoReply.Info)
    })
  ,
  'DESCRIPTOR' : _INFOREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.InfoReply)
  })
_sym_db.RegisterMessage(InfoReply)
_sym_db.RegisterMessage(InfoReply.Info)

ListRequest = _reflection.GeneratedProtocolMessageType('ListRequest', (_message.Message,), {
  'DESCRIPTOR' : _LISTREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.ListRequest)
  })
_sym_db.RegisterMessage(ListRequest)

ListVMInstance = _reflection.GeneratedProtocolMessageType('ListVMInstance', (_message.Message,), {
  'DESCRIPTOR' : _LISTVMINSTANCE,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.ListVMInstance)
  })
_sym_db.RegisterMessage(ListVMInstance)

ListReply = _reflection.GeneratedProtocolMessageType('ListReply', (_message.Message,), {
  'DESCRIPTOR' : _LISTREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.ListReply)
  })
_sym_db.RegisterMessage(ListReply)

NetworksRequest = _reflection.GeneratedProtocolMessageType('NetworksRequest', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKSREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.NetworksRequest)
  })
_sym_db.RegisterMessage(NetworksRequest)

NetInterface = _reflection.GeneratedProtocolMessageType('NetInterface', (_message.Message,), {
  'DESCRIPTOR' : _NETINTERFACE,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.NetInterface)
  })
_sym_db.RegisterMessage(NetInterface)

NetworksReply = _reflection.GeneratedProtocolMessageType('NetworksReply', (_message.Message,), {
  'DESCRIPTOR' : _NETWORKSREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.NetworksReply)
  })
_sym_db.RegisterMessage(NetworksReply)

TargetPathInfo = _reflection.GeneratedProtocolMessageType('TargetPathInfo', (_message.Message,), {
  'DESCRIPTOR' : _TARGETPATHINFO,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.TargetPathInfo)
  })
_sym_db.RegisterMessage(TargetPathInfo)

MountRequest = _reflection.GeneratedProtocolMessageType('MountRequest', (_message.Message,), {
  'DESCRIPTOR' : _MOUNTREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.MountRequest)
  })
_sym_db.RegisterMessage(MountRequest)

MountReply = _reflection.GeneratedProtocolMessageType('MountReply', (_message.Message,), {
  'DESCRIPTOR' : _MOUNTREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.MountReply)
  })
_sym_db.RegisterMessage(MountReply)

PingRequest = _reflection.GeneratedProtocolMessageType('PingRequest', (_message.Message,), {
  'DESCRIPTOR' : _PINGREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.PingRequest)
  })
_sym_db.RegisterMessage(PingRequest)

PingReply = _reflection.GeneratedProtocolMessageType('PingReply', (_message.Message,), {
  'DESCRIPTOR' : _PINGREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.PingReply)
  })
_sym_db.RegisterMessage(PingReply)

RecoverRequest = _reflection.GeneratedProtocolMessageType('RecoverRequest', (_message.Message,), {
  'DESCRIPTOR' : _RECOVERREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.RecoverRequest)
  })
_sym_db.RegisterMessage(RecoverRequest)

RecoverReply = _reflection.GeneratedProtocolMessageType('RecoverReply', (_message.Message,), {
  'DESCRIPTOR' : _RECOVERREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.RecoverReply)
  })
_sym_db.RegisterMessage(RecoverReply)

SSHInfoRequest = _reflection.GeneratedProtocolMessageType('SSHInfoRequest', (_message.Message,), {
  'DESCRIPTOR' : _SSHINFOREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.SSHInfoRequest)
  })
_sym_db.RegisterMessage(SSHInfoRequest)

SSHInfo = _reflection.GeneratedProtocolMessageType('SSHInfo', (_message.Message,), {
  'DESCRIPTOR' : _SSHINFO,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.SSHInfo)
  })
_sym_db.RegisterMessage(SSHInfo)

SSHInfoReply = _reflection.GeneratedProtocolMessageType('SSHInfoReply', (_message.Message,), {

  'SshInfoEntry' : _reflection.GeneratedProtocolMessageType('SshInfoEntry', (_message.Message,), {
    'DESCRIPTOR' : _SSHINFOREPLY_SSHINFOENTRY,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.SSHInfoReply.SshInfoEntry)
    })
  ,
  'DESCRIPTOR' : _SSHINFOREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.SSHInfoReply)
  })
_sym_db.RegisterMessage(SSHInfoReply)
_sym_db.RegisterMessage(SSHInfoReply.SshInfoEntry)

StartError = _reflection.GeneratedProtocolMessageType('StartError', (_message.Message,), {

  'InstanceErrorsEntry' : _reflection.GeneratedProtocolMessageType('InstanceErrorsEntry', (_message.Message,), {
    'DESCRIPTOR' : _STARTERROR_INSTANCEERRORSENTRY,
    '__module__' : 'multipass_pb2'
    # @@protoc_insertion_point(class_scope:multipass.StartError.InstanceErrorsEntry)
    })
  ,
  'DESCRIPTOR' : _STARTERROR,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.StartError)
  })
_sym_db.RegisterMessage(StartError)
_sym_db.RegisterMessage(StartError.InstanceErrorsEntry)

StartRequest = _reflection.GeneratedProtocolMessageType('StartRequest', (_message.Message,), {
  'DESCRIPTOR' : _STARTREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.StartRequest)
  })
_sym_db.RegisterMessage(StartRequest)

StartReply = _reflection.GeneratedProtocolMessageType('StartReply', (_message.Message,), {
  'DESCRIPTOR' : _STARTREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.StartReply)
  })
_sym_db.RegisterMessage(StartReply)

StopRequest = _reflection.GeneratedProtocolMessageType('StopRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.StopRequest)
  })
_sym_db.RegisterMessage(StopRequest)

StopReply = _reflection.GeneratedProtocolMessageType('StopReply', (_message.Message,), {
  'DESCRIPTOR' : _STOPREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.StopReply)
  })
_sym_db.RegisterMessage(StopReply)

SuspendRequest = _reflection.GeneratedProtocolMessageType('SuspendRequest', (_message.Message,), {
  'DESCRIPTOR' : _SUSPENDREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.SuspendRequest)
  })
_sym_db.RegisterMessage(SuspendRequest)

SuspendReply = _reflection.GeneratedProtocolMessageType('SuspendReply', (_message.Message,), {
  'DESCRIPTOR' : _SUSPENDREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.SuspendReply)
  })
_sym_db.RegisterMessage(SuspendReply)

RestartRequest = _reflection.GeneratedProtocolMessageType('RestartRequest', (_message.Message,), {
  'DESCRIPTOR' : _RESTARTREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.RestartRequest)
  })
_sym_db.RegisterMessage(RestartRequest)

RestartReply = _reflection.GeneratedProtocolMessageType('RestartReply', (_message.Message,), {
  'DESCRIPTOR' : _RESTARTREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.RestartReply)
  })
_sym_db.RegisterMessage(RestartReply)

DeleteRequest = _reflection.GeneratedProtocolMessageType('DeleteRequest', (_message.Message,), {
  'DESCRIPTOR' : _DELETEREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.DeleteRequest)
  })
_sym_db.RegisterMessage(DeleteRequest)

DeleteReply = _reflection.GeneratedProtocolMessageType('DeleteReply', (_message.Message,), {
  'DESCRIPTOR' : _DELETEREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.DeleteReply)
  })
_sym_db.RegisterMessage(DeleteReply)

UmountRequest = _reflection.GeneratedProtocolMessageType('UmountRequest', (_message.Message,), {
  'DESCRIPTOR' : _UMOUNTREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.UmountRequest)
  })
_sym_db.RegisterMessage(UmountRequest)

UmountReply = _reflection.GeneratedProtocolMessageType('UmountReply', (_message.Message,), {
  'DESCRIPTOR' : _UMOUNTREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.UmountReply)
  })
_sym_db.RegisterMessage(UmountReply)

VersionRequest = _reflection.GeneratedProtocolMessageType('VersionRequest', (_message.Message,), {
  'DESCRIPTOR' : _VERSIONREQUEST,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.VersionRequest)
  })
_sym_db.RegisterMessage(VersionRequest)

VersionReply = _reflection.GeneratedProtocolMessageType('VersionReply', (_message.Message,), {
  'DESCRIPTOR' : _VERSIONREPLY,
  '__module__' : 'multipass_pb2'
  # @@protoc_insertion_point(class_scope:multipass.VersionReply)
  })
_sym_db.RegisterMessage(VersionReply)


_MOUNTMAPS_UIDMAPENTRY._options = None
_MOUNTMAPS_GIDMAPENTRY._options = None
_SSHINFOREPLY_SSHINFOENTRY._options = None
_STARTERROR_INSTANCEERRORSENTRY._options = None

_RPC = _descriptor.ServiceDescriptor(
  name='Rpc',
  full_name='multipass.Rpc',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=5807,
  serialized_end=6908,
  methods=[
  _descriptor.MethodDescriptor(
    name='create',
    full_name='multipass.Rpc.create',
    index=0,
    containing_service=None,
    input_type=_LAUNCHREQUEST,
    output_type=_LAUNCHREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='launch',
    full_name='multipass.Rpc.launch',
    index=1,
    containing_service=None,
    input_type=_LAUNCHREQUEST,
    output_type=_LAUNCHREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='purge',
    full_name='multipass.Rpc.purge',
    index=2,
    containing_service=None,
    input_type=_PURGEREQUEST,
    output_type=_PURGEREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='find',
    full_name='multipass.Rpc.find',
    index=3,
    containing_service=None,
    input_type=_FINDREQUEST,
    output_type=_FINDREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='info',
    full_name='multipass.Rpc.info',
    index=4,
    containing_service=None,
    input_type=_INFOREQUEST,
    output_type=_INFOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='list',
    full_name='multipass.Rpc.list',
    index=5,
    containing_service=None,
    input_type=_LISTREQUEST,
    output_type=_LISTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='networks',
    full_name='multipass.Rpc.networks',
    index=6,
    containing_service=None,
    input_type=_NETWORKSREQUEST,
    output_type=_NETWORKSREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='mount',
    full_name='multipass.Rpc.mount',
    index=7,
    containing_service=None,
    input_type=_MOUNTREQUEST,
    output_type=_MOUNTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ping',
    full_name='multipass.Rpc.ping',
    index=8,
    containing_service=None,
    input_type=_PINGREQUEST,
    output_type=_PINGREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='recover',
    full_name='multipass.Rpc.recover',
    index=9,
    containing_service=None,
    input_type=_RECOVERREQUEST,
    output_type=_RECOVERREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='ssh_info',
    full_name='multipass.Rpc.ssh_info',
    index=10,
    containing_service=None,
    input_type=_SSHINFOREQUEST,
    output_type=_SSHINFOREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='start',
    full_name='multipass.Rpc.start',
    index=11,
    containing_service=None,
    input_type=_STARTREQUEST,
    output_type=_STARTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='stop',
    full_name='multipass.Rpc.stop',
    index=12,
    containing_service=None,
    input_type=_STOPREQUEST,
    output_type=_STOPREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='suspend',
    full_name='multipass.Rpc.suspend',
    index=13,
    containing_service=None,
    input_type=_SUSPENDREQUEST,
    output_type=_SUSPENDREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='restart',
    full_name='multipass.Rpc.restart',
    index=14,
    containing_service=None,
    input_type=_RESTARTREQUEST,
    output_type=_RESTARTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='delet',
    full_name='multipass.Rpc.delet',
    index=15,
    containing_service=None,
    input_type=_DELETEREQUEST,
    output_type=_DELETEREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='umount',
    full_name='multipass.Rpc.umount',
    index=16,
    containing_service=None,
    input_type=_UMOUNTREQUEST,
    output_type=_UMOUNTREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
  _descriptor.MethodDescriptor(
    name='version',
    full_name='multipass.Rpc.version',
    index=17,
    containing_service=None,
    input_type=_VERSIONREQUEST,
    output_type=_VERSIONREPLY,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_RPC)

DESCRIPTOR.services_by_name['Rpc'] = _RPC

# @@protoc_insertion_point(module_scope)
